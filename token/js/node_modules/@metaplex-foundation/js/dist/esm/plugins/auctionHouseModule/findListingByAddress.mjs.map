{"version":3,"file":"findListingByAddress.mjs","sources":["../../../../src/plugins/auctionHouseModule/findListingByAddress.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, OperationHandler } from '@/types';\nimport { toListingReceiptAccount } from './accounts';\nimport { AuctionHouse } from './AuctionHouse';\nimport { Listing, toListing } from './Listing';\nimport { DisposableScope } from '@/utils';\nimport { findListingReceiptPda } from './pdas';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindListingByAddressOperation' as const;\nexport const findListingByAddressOperation =\n  useOperation<FindListingByAddressOperation>(Key);\nexport type FindListingByAddressOperation = Operation<\n  typeof Key,\n  FindListingByAddressInput,\n  Listing\n>;\n\nexport type FindListingByAddressInput = {\n  address: PublicKey;\n  auctionHouse: AuctionHouse;\n  loadJsonMetadata?: boolean; // Default: true\n  commitment?: Commitment;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findListingByAddressOperationHandler: OperationHandler<FindListingByAddressOperation> =\n  {\n    handle: async (\n      operation: FindListingByAddressOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const {\n        address,\n        auctionHouse,\n        commitment,\n        loadJsonMetadata = true,\n      } = operation.input;\n\n      const receiptAddress = findListingReceiptPda(address);\n      const account = toListingReceiptAccount(\n        await metaplex.rpc().getAccount(receiptAddress, commitment)\n      );\n\n      const tokenModel = await metaplex\n        .nfts()\n        .findTokenWithMetadataByMetadata(\n          account.data.metadata,\n          account.data.seller,\n          { commitment, loadJsonMetadata }\n        )\n        .run(scope);\n\n      return toListing(account, auctionHouse, tokenModel);\n    },\n  };\n"],"names":["Key","findListingByAddressOperation","useOperation","findListingByAddressOperationHandler","handle","operation","metaplex","scope","address","auctionHouse","commitment","loadJsonMetadata","input","receiptAddress","findListingReceiptPda","account","toListingReceiptAccount","rpc","getAccount","tokenModel","nfts","findTokenWithMetadataByMetadata","data","metadata","seller","run","toListing"],"mappings":";;;;;AAUA;AACA;;AAEA,MAAMA,GAAG,GAAG,+BAAZ,CAAA;MACaC,6BAA6B,GACxCC,YAAY,CAAgCF,GAAhC,EADP;AAeP;AACA;AACA;AAEO,MAAMG,oCAAqF,GAChG;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MACJC,OADI;MAEJC,YAFI;MAGJC,UAHI;AAIJC,MAAAA,gBAAgB,GAAG,IAAA;KACjBN,GAAAA,SAAS,CAACO,KALd,CAAA;AAOA,IAAA,MAAMC,cAAc,GAAGC,qBAAqB,CAACN,OAAD,CAA5C,CAAA;AACA,IAAA,MAAMO,OAAO,GAAGC,uBAAuB,CACrC,MAAMV,QAAQ,CAACW,GAAT,EAAA,CAAeC,UAAf,CAA0BL,cAA1B,EAA0CH,UAA1C,CAD+B,CAAvC,CAAA;IAIA,MAAMS,UAAU,GAAG,MAAMb,QAAQ,CAC9Bc,IADsB,EAAA,CAEtBC,+BAFsB,CAGrBN,OAAO,CAACO,IAAR,CAAaC,QAHQ,EAIrBR,OAAO,CAACO,IAAR,CAAaE,MAJQ,EAKrB;MAAEd,UAAF;AAAcC,MAAAA,gBAAAA;AAAd,KALqB,CAOtBc,CAAAA,GAPsB,CAOlBlB,KAPkB,CAAzB,CAAA;AASA,IAAA,OAAOmB,SAAS,CAACX,OAAD,EAAUN,YAAV,EAAwBU,UAAxB,CAAhB,CAAA;AACD,GAAA;AA5BH;;;;"}