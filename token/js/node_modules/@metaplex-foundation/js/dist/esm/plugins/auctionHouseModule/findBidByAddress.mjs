import { findBidReceiptPda } from './pdas.mjs';
import { toBid } from './Bid.mjs';
import { toBidReceiptAccount } from './accounts.mjs';
import { useOperation } from '../../types/Operation.mjs';

// Operation
// -----------------

const Key = 'FindBidByAddressOperation';
const findBidByAddressOperation = useOperation(Key);
// -----------------
// Handler
// -----------------
const findBidByAddressOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const {
      address,
      auctionHouse,
      commitment,
      loadJsonMetadata = true
    } = operation.input;
    const receiptAddress = findBidReceiptPda(address);
    const account = toBidReceiptAccount(await metaplex.rpc().getAccount(receiptAddress, commitment));
    scope.throwIfCanceled();

    if (account.data.tokenAccount) {
      const tokenModel = await metaplex.nfts().findTokenWithMetadataByMetadata(account.data.metadata, account.data.buyer, {
        commitment,
        loadJsonMetadata
      }).run(scope);
      return toBid(account, auctionHouse, tokenModel);
    }

    const mintModel = await metaplex.nfts().findMintWithMetadataByMetadata(account.data.metadata, {
      commitment,
      loadJsonMetadata
    }).run(scope);
    return toBid(account, auctionHouse, mintModel);
  }
};

export { findBidByAddressOperation, findBidByAddressOperationHandler };
//# sourceMappingURL=findBidByAddress.mjs.map
