{"version":3,"file":"findMintByAddress.mjs","sources":["../../../../src/plugins/tokenModule/findMintByAddress.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { Operation, useOperation, OperationHandler } from '@/types';\nimport { toMint, Mint } from './Mint';\nimport { toMintAccount } from './accounts';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindMintByAddressOperation' as const;\nexport const findMintByAddressOperation =\n  useOperation<FindMintByAddressOperation>(Key);\nexport type FindMintByAddressOperation = Operation<\n  typeof Key,\n  FindMintByAddressInput,\n  Mint\n>;\n\nexport type FindMintByAddressInput = {\n  address: PublicKey;\n  commitment?: Commitment;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findMintByAddressOperationHandler: OperationHandler<FindMintByAddressOperation> =\n  {\n    handle: async (\n      operation: FindMintByAddressOperation,\n      metaplex: Metaplex\n    ): Promise<Mint> => {\n      const { address, commitment } = operation.input;\n\n      const account = toMintAccount(\n        await metaplex.rpc().getAccount(address, commitment)\n      );\n\n      return toMint(account);\n    },\n  };\n"],"names":["Key","findMintByAddressOperation","useOperation","findMintByAddressOperationHandler","handle","operation","metaplex","address","commitment","input","account","toMintAccount","rpc","getAccount","toMint"],"mappings":";;;;AAOA;AACA;;AAEA,MAAMA,GAAG,GAAG,4BAAZ,CAAA;MACaC,0BAA0B,GACrCC,YAAY,CAA6BF,GAA7B,EADP;AAaP;AACA;AACA;AAEO,MAAMG,iCAA+E,GAC1F;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,KAGY;IAClB,MAAM;MAAEC,OAAF;AAAWC,MAAAA,UAAAA;KAAeH,GAAAA,SAAS,CAACI,KAA1C,CAAA;AAEA,IAAA,MAAMC,OAAO,GAAGC,aAAa,CAC3B,MAAML,QAAQ,CAACM,GAAT,EAAA,CAAeC,UAAf,CAA0BN,OAA1B,EAAmCC,UAAnC,CADqB,CAA7B,CAAA;IAIA,OAAOM,MAAM,CAACJ,OAAD,CAAb,CAAA;AACD,GAAA;AAZH;;;;"}