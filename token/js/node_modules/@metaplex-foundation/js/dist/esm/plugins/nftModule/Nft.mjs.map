{"version":3,"file":"Nft.mjs","sources":["../../../../src/plugins/nftModule/Nft.ts"],"sourcesContent":["import { Pda } from '@/types';\nimport { assert } from '@/utils';\nimport { LazyMetadata, Metadata } from './Metadata';\nimport { Mint } from '../tokenModule';\nimport { NftEdition } from './NftEdition';\n\nexport type Nft = Omit<Metadata, 'model' | 'address'> &\n  Readonly<{\n    model: 'nft';\n    lazy: false;\n    metadataAddress: Pda;\n    mint: Mint;\n    edition: NftEdition;\n  }>;\n\nexport const isNft = (value: any): value is Nft =>\n  typeof value === 'object' && value.model === 'nft' && !value.lazy;\n\nexport function assertNft(value: any): asserts value is Nft {\n  assert(isNft(value), `Expected Nft model`);\n}\nexport const toNft = (\n  metadata: Metadata,\n  mint: Mint,\n  edition: NftEdition\n): Nft => ({\n  ...metadata,\n  model: 'nft',\n  lazy: false,\n  metadataAddress: metadata.address,\n  mint,\n  edition,\n});\n\nexport type LazyNft = Omit<Nft, 'lazy' | 'mint' | 'edition' | 'json'> &\n  Readonly<{\n    lazy: true;\n  }>;\n\nexport const isLazyNft = (value: any): value is LazyNft =>\n  typeof value === 'object' && value.model === 'nft' && value.lazy;\n\nexport function assertLazyNft(value: any): asserts value is LazyNft {\n  assert(isLazyNft(value), `Expected LazyNft model`);\n}\nexport const toLazyNft = (metadata: Metadata | LazyMetadata): LazyNft => ({\n  ...metadata,\n  model: 'nft',\n  lazy: true,\n  metadataAddress: metadata.address,\n});\n"],"names":["isNft","value","model","lazy","assertNft","assert","toNft","metadata","mint","edition","metadataAddress","address","isLazyNft","assertLazyNft","toLazyNft"],"mappings":";;MAeaA,KAAK,GAAIC,KAAD,IACnB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,KAA7C,IAAsD,CAACD,KAAK,CAACE,KADxD;AAGA,SAASC,SAAT,CAAmBH,KAAnB,EAAqD;AAC1DI,EAAAA,MAAM,CAACL,KAAK,CAACC,KAAD,CAAN,EAAgB,oBAAhB,CAAN,CAAA;AACD,CAAA;AACYK,MAAAA,KAAK,GAAG,CACnBC,QADmB,EAEnBC,IAFmB,EAGnBC,OAHmB,MAIV,EACT,GAAGF,QADM;AAETL,EAAAA,KAAK,EAAE,KAFE;AAGTC,EAAAA,IAAI,EAAE,KAHG;EAITO,eAAe,EAAEH,QAAQ,CAACI,OAJjB;EAKTH,IALS;AAMTC,EAAAA,OAAAA;AANS,CAJU,EAAd;MAkBMG,SAAS,GAAIX,KAAD,IACvB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,KAA7C,IAAsDD,KAAK,CAACE,KADvD;AAGA,SAASU,aAAT,CAAuBZ,KAAvB,EAA6D;AAClEI,EAAAA,MAAM,CAACO,SAAS,CAACX,KAAD,CAAV,EAAoB,wBAApB,CAAN,CAAA;AACD,CAAA;MACYa,SAAS,GAAIP,QAAD,KAAiD,EACxE,GAAGA,QADqE;AAExEL,EAAAA,KAAK,EAAE,KAFiE;AAGxEC,EAAAA,IAAI,EAAE,IAHkE;EAIxEO,eAAe,EAAEH,QAAQ,CAACI,OAAAA;AAJ8C,CAAjD;;;;"}