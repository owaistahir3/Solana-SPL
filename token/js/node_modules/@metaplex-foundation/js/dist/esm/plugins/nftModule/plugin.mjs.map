{"version":3,"file":"plugin.mjs","sources":["../../../../src/plugins/nftModule/plugin.ts"],"sourcesContent":["import { cusper } from '@metaplex-foundation/mpl-token-metadata';\nimport type { Metaplex } from '@/Metaplex';\nimport { TokenMetadataProgram } from './program';\nimport { TokenMetadataGpaBuilder } from './gpaBuilders';\nimport { ErrorWithLogs, MetaplexPlugin } from '@/types';\nimport { NftClient } from './NftClient';\nimport { createNftOperation, createNftOperationHandler } from './createNft';\nimport {\n  findNftByMintOperationHandler,\n  findNftByMintOperation,\n} from './findNftByMint';\nimport {\n  findNftsByCreatorOperationHandler,\n  findNftsByCreatorOperation,\n} from './findNftsByCreator';\nimport {\n  findNftsByMintListOperationHandler,\n  findNftsByMintListOperation,\n} from './findNftsByMintList';\nimport {\n  findNftsByOwnerOperationHandler,\n  findNftsByOwnerOperation,\n} from './findNftsByOwner';\nimport {\n  findNftsByUpdateAuthorityOperationHandler,\n  findNftsByUpdateAuthorityOperation,\n} from './findNftsByUpdateAuthority';\nimport {\n  findMintWithMetadataByAddressOperation,\n  findMintWithMetadataByAddressOperationHandler,\n} from './findMintWithMetadataByAddress';\nimport {\n  findMintWithMetadataByMetadataOperation,\n  findMintWithMetadataByMetadataOperationHandler,\n} from './findMintWithMetadataByMetadata';\nimport {\n  findTokenWithMetadataByAddressOperation,\n  findTokenWithMetadataByAddressOperationHandler,\n} from './findTokenWithMetadataByAddress';\nimport {\n  findTokenWithMetadataByMetadataOperation,\n  findTokenWithMetadataByMetadataOperationHandler,\n} from './findTokenWithMetadataByMetadata';\nimport {\n  findTokenWithMetadataByMintOperation,\n  findTokenWithMetadataByMintOperationHandler,\n} from './findTokenWithMetadataByMint';\nimport {\n  loadMetadataOperation,\n  loadMetadataOperationHandler,\n} from './loadMetadata';\nimport { loadNftOperation, loadNftOperationHandler } from './loadNft';\nimport {\n  printNewEditionOperation,\n  printNewEditionOperationHandler,\n} from './printNewEdition';\nimport { updateNftOperation, updateNftOperationHandler } from './updateNft';\nimport {\n  uploadMetadataOperation,\n  uploadMetadataOperationHandler,\n} from './uploadMetadata';\nimport { useNftOperation, useNftOperationHandler } from './useNft';\n\nexport const nftModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    // Token Metadata Program.\n    metaplex.programs().register({\n      name: 'TokenMetadataProgram',\n      address: TokenMetadataProgram.publicKey,\n      errorResolver: (error: ErrorWithLogs) =>\n        cusper.errorFromProgramLogs(error.logs, false),\n      gpaResolver: (metaplex: Metaplex) =>\n        new TokenMetadataGpaBuilder(metaplex, TokenMetadataProgram.publicKey),\n    });\n\n    // Operations.\n    const op = metaplex.operations();\n    op.register(createNftOperation, createNftOperationHandler);\n    op.register(\n      findMintWithMetadataByAddressOperation,\n      findMintWithMetadataByAddressOperationHandler\n    );\n    op.register(\n      findMintWithMetadataByMetadataOperation,\n      findMintWithMetadataByMetadataOperationHandler\n    );\n    op.register(findNftByMintOperation, findNftByMintOperationHandler);\n    op.register(findNftsByCreatorOperation, findNftsByCreatorOperationHandler);\n    op.register(\n      findNftsByMintListOperation,\n      findNftsByMintListOperationHandler\n    );\n    op.register(findNftsByOwnerOperation, findNftsByOwnerOperationHandler);\n    op.register(\n      findNftsByUpdateAuthorityOperation,\n      findNftsByUpdateAuthorityOperationHandler\n    );\n    op.register(\n      findTokenWithMetadataByAddressOperation,\n      findTokenWithMetadataByAddressOperationHandler\n    );\n    op.register(\n      findTokenWithMetadataByMetadataOperation,\n      findTokenWithMetadataByMetadataOperationHandler\n    );\n    op.register(\n      findTokenWithMetadataByMintOperation,\n      findTokenWithMetadataByMintOperationHandler\n    );\n    op.register(loadMetadataOperation, loadMetadataOperationHandler);\n    op.register(loadNftOperation, loadNftOperationHandler);\n    op.register(printNewEditionOperation, printNewEditionOperationHandler);\n    op.register(updateNftOperation, updateNftOperationHandler);\n    op.register(uploadMetadataOperation, uploadMetadataOperationHandler);\n    op.register(useNftOperation, useNftOperationHandler);\n\n    metaplex.nfts = function () {\n      return new NftClient(this);\n    };\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    nfts(): NftClient;\n  }\n}\n"],"names":["nftModule","install","metaplex","programs","register","name","address","TokenMetadataProgram","publicKey","errorResolver","error","cusper","errorFromProgramLogs","logs","gpaResolver","TokenMetadataGpaBuilder","op","operations","createNftOperation","createNftOperationHandler","findMintWithMetadataByAddressOperation","findMintWithMetadataByAddressOperationHandler","findMintWithMetadataByMetadataOperation","findMintWithMetadataByMetadataOperationHandler","findNftByMintOperation","findNftByMintOperationHandler","findNftsByCreatorOperation","findNftsByCreatorOperationHandler","findNftsByMintListOperation","findNftsByMintListOperationHandler","findNftsByOwnerOperation","findNftsByOwnerOperationHandler","findNftsByUpdateAuthorityOperation","findNftsByUpdateAuthorityOperationHandler","findTokenWithMetadataByAddressOperation","findTokenWithMetadataByAddressOperationHandler","findTokenWithMetadataByMetadataOperation","findTokenWithMetadataByMetadataOperationHandler","findTokenWithMetadataByMintOperation","findTokenWithMetadataByMintOperationHandler","loadMetadataOperation","loadMetadataOperationHandler","loadNftOperation","loadNftOperationHandler","printNewEditionOperation","printNewEditionOperationHandler","updateNftOperation","updateNftOperationHandler","uploadMetadataOperation","uploadMetadataOperationHandler","useNftOperation","useNftOperationHandler","nfts","NftClient"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA+DO,MAAMA,SAAS,GAAG,OAAuB;EAC9CC,OAAO,CAACC,QAAD,EAAqB;AAC1B;AACAA,IAAAA,QAAQ,CAACC,QAAT,EAAoBC,CAAAA,QAApB,CAA6B;AAC3BC,MAAAA,IAAI,EAAE,sBADqB;MAE3BC,OAAO,EAAEC,oBAAoB,CAACC,SAFH;AAG3BC,MAAAA,aAAa,EAAGC,KAAD,IACbC,MAAM,CAACC,oBAAP,CAA4BF,KAAK,CAACG,IAAlC,EAAwC,KAAxC,CAJyB;MAK3BC,WAAW,EAAGZ,QAAD,IACX,IAAIa,uBAAJ,CAA4Bb,QAA5B,EAAsCK,oBAAoB,CAACC,SAA3D,CAAA;AANyB,KAA7B,EAF0B;;AAY1B,IAAA,MAAMQ,EAAE,GAAGd,QAAQ,CAACe,UAAT,EAAX,CAAA;AACAD,IAAAA,EAAE,CAACZ,QAAH,CAAYc,kBAAZ,EAAgCC,yBAAhC,CAAA,CAAA;AACAH,IAAAA,EAAE,CAACZ,QAAH,CACEgB,sCADF,EAEEC,6CAFF,CAAA,CAAA;AAIAL,IAAAA,EAAE,CAACZ,QAAH,CACEkB,uCADF,EAEEC,8CAFF,CAAA,CAAA;AAIAP,IAAAA,EAAE,CAACZ,QAAH,CAAYoB,sBAAZ,EAAoCC,6BAApC,CAAA,CAAA;AACAT,IAAAA,EAAE,CAACZ,QAAH,CAAYsB,0BAAZ,EAAwCC,iCAAxC,CAAA,CAAA;AACAX,IAAAA,EAAE,CAACZ,QAAH,CACEwB,2BADF,EAEEC,kCAFF,CAAA,CAAA;AAIAb,IAAAA,EAAE,CAACZ,QAAH,CAAY0B,wBAAZ,EAAsCC,+BAAtC,CAAA,CAAA;AACAf,IAAAA,EAAE,CAACZ,QAAH,CACE4B,kCADF,EAEEC,yCAFF,CAAA,CAAA;AAIAjB,IAAAA,EAAE,CAACZ,QAAH,CACE8B,uCADF,EAEEC,8CAFF,CAAA,CAAA;AAIAnB,IAAAA,EAAE,CAACZ,QAAH,CACEgC,wCADF,EAEEC,+CAFF,CAAA,CAAA;AAIArB,IAAAA,EAAE,CAACZ,QAAH,CACEkC,oCADF,EAEEC,2CAFF,CAAA,CAAA;AAIAvB,IAAAA,EAAE,CAACZ,QAAH,CAAYoC,qBAAZ,EAAmCC,4BAAnC,CAAA,CAAA;AACAzB,IAAAA,EAAE,CAACZ,QAAH,CAAYsC,gBAAZ,EAA8BC,uBAA9B,CAAA,CAAA;AACA3B,IAAAA,EAAE,CAACZ,QAAH,CAAYwC,wBAAZ,EAAsCC,+BAAtC,CAAA,CAAA;AACA7B,IAAAA,EAAE,CAACZ,QAAH,CAAY0C,kBAAZ,EAAgCC,yBAAhC,CAAA,CAAA;AACA/B,IAAAA,EAAE,CAACZ,QAAH,CAAY4C,uBAAZ,EAAqCC,8BAArC,CAAA,CAAA;AACAjC,IAAAA,EAAE,CAACZ,QAAH,CAAY8C,eAAZ,EAA6BC,sBAA7B,CAAA,CAAA;;IAEAjD,QAAQ,CAACkD,IAAT,GAAgB,YAAY;AAC1B,MAAA,OAAO,IAAIC,SAAJ,CAAc,IAAd,CAAP,CAAA;KADF,CAAA;AAGD,GAAA;;AAxD6C,CAAvB;;;;"}