{"version":3,"file":"Token.cjs","sources":["../../../../src/plugins/tokenModule/Token.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport { amount, Amount, BigNumber, Pda, toBigNumber } from '@/types';\nimport { assert, Option } from '@/utils';\nimport { TokenAccount } from './accounts';\nimport { Mint } from './Mint';\nimport { findAssociatedTokenAccountPda } from './pdas';\n\nexport type Token = Readonly<{\n  model: 'token';\n  address: PublicKey | Pda;\n  isAssociatedToken: boolean;\n  mintAddress: PublicKey;\n  ownerAddress: PublicKey;\n  amount: BigNumber;\n  closeAuthorityAddress: Option<PublicKey>;\n  delegateAddress: Option<PublicKey>;\n  delegateAmount: BigNumber;\n}>;\n\nexport const isToken = (value: any): value is Token =>\n  typeof value === 'object' && value.model === 'token';\n\nexport function assertToken(value: any): asserts value is Token {\n  assert(isToken(value), `Expected Token model`);\n}\nexport const toToken = (account: TokenAccount): Token => {\n  const associatedTokenAddress = findAssociatedTokenAccountPda(\n    account.data.mint,\n    account.data.owner\n  );\n  const isAssociatedToken = associatedTokenAddress.equals(account.publicKey);\n\n  return {\n    model: 'token',\n    address: isAssociatedToken ? associatedTokenAddress : account.publicKey,\n    isAssociatedToken,\n    mintAddress: account.data.mint,\n    ownerAddress: account.data.owner,\n    amount: toBigNumber(account.data.amount.toString()),\n    closeAuthorityAddress: account.data.closeAuthorityOption\n      ? account.data.closeAuthority\n      : null,\n    delegateAddress: account.data.delegateOption ? account.data.delegate : null,\n    delegateAmount: toBigNumber(account.data.delegatedAmount.toString()),\n  };\n};\n\nexport type TokenWithMint = Omit<\n  Token,\n  'model' | 'mintAddress' | 'amount' | 'delegateAmount'\n> &\n  Readonly<{\n    model: 'tokenWithMint';\n    mint: Mint;\n    amount: Amount;\n    delegateAmount: Amount;\n  }>;\n\nexport const isTokenWithMint = (value: any): value is TokenWithMint =>\n  typeof value === 'object' && value.model === 'tokenWithMint';\n\nexport function assertTokenWithMint(\n  value: any\n): asserts value is TokenWithMint {\n  assert(isTokenWithMint(value), `Expected TokenWithMint model`);\n}\n\nexport const toTokenWithMint = (\n  tokenAccount: TokenAccount,\n  mintModel: Mint\n): TokenWithMint => {\n  const token = toToken(tokenAccount);\n  return {\n    ...token,\n    model: 'tokenWithMint',\n    mint: mintModel,\n    amount: amount(token.amount, mintModel.currency),\n    delegateAmount: amount(token.delegateAmount, mintModel.currency),\n  };\n};\n"],"names":["isToken","value","model","assertToken","assert","toToken","account","associatedTokenAddress","findAssociatedTokenAccountPda","data","mint","owner","isAssociatedToken","equals","publicKey","address","mintAddress","ownerAddress","amount","toBigNumber","toString","closeAuthorityAddress","closeAuthorityOption","closeAuthority","delegateAddress","delegateOption","delegate","delegateAmount","delegatedAmount","isTokenWithMint","assertTokenWithMint","toTokenWithMint","tokenAccount","mintModel","token","currency"],"mappings":";;;;;;;;;AAmBaA,MAAAA,OAAO,GAAIC,KAAD,IACrB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,QADxC;AAGA,SAASC,WAAT,CAAqBF,KAArB,EAAyD;AAC9DG,EAAAA,iBAAM,CAACJ,OAAO,CAACC,KAAD,CAAR,EAAkB,sBAAlB,CAAN,CAAA;AACD,CAAA;AACYI,MAAAA,OAAO,GAAIC,OAAD,IAAkC;AACvD,EAAA,MAAMC,sBAAsB,GAAGC,kCAA6B,CAC1DF,OAAO,CAACG,IAAR,CAAaC,IAD6C,EAE1DJ,OAAO,CAACG,IAAR,CAAaE,KAF6C,CAA5D,CAAA;EAIA,MAAMC,iBAAiB,GAAGL,sBAAsB,CAACM,MAAvB,CAA8BP,OAAO,CAACQ,SAAtC,CAA1B,CAAA;EAEA,OAAO;AACLZ,IAAAA,KAAK,EAAE,OADF;AAELa,IAAAA,OAAO,EAAEH,iBAAiB,GAAGL,sBAAH,GAA4BD,OAAO,CAACQ,SAFzD;IAGLF,iBAHK;AAILI,IAAAA,WAAW,EAAEV,OAAO,CAACG,IAAR,CAAaC,IAJrB;AAKLO,IAAAA,YAAY,EAAEX,OAAO,CAACG,IAAR,CAAaE,KALtB;IAMLO,MAAM,EAAEC,qBAAW,CAACb,OAAO,CAACG,IAAR,CAAaS,MAAb,CAAoBE,QAApB,EAAD,CANd;AAOLC,IAAAA,qBAAqB,EAAEf,OAAO,CAACG,IAAR,CAAaa,oBAAb,GACnBhB,OAAO,CAACG,IAAR,CAAac,cADM,GAEnB,IATC;AAULC,IAAAA,eAAe,EAAElB,OAAO,CAACG,IAAR,CAAagB,cAAb,GAA8BnB,OAAO,CAACG,IAAR,CAAaiB,QAA3C,GAAsD,IAVlE;IAWLC,cAAc,EAAER,qBAAW,CAACb,OAAO,CAACG,IAAR,CAAamB,eAAb,CAA6BR,QAA7B,EAAD,CAAA;GAX7B,CAAA;AAaD,EApBM;AAiCMS,MAAAA,eAAe,GAAI5B,KAAD,IAC7B,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,gBADxC;AAGA,SAAS4B,mBAAT,CACL7B,KADK,EAE2B;AAChCG,EAAAA,iBAAM,CAACyB,eAAe,CAAC5B,KAAD,CAAhB,EAA0B,8BAA1B,CAAN,CAAA;AACD,CAAA;MAEY8B,eAAe,GAAG,CAC7BC,YAD6B,EAE7BC,SAF6B,KAGX;AAClB,EAAA,MAAMC,KAAK,GAAG7B,OAAO,CAAC2B,YAAD,CAArB,CAAA;EACA,OAAO,EACL,GAAGE,KADE;AAELhC,IAAAA,KAAK,EAAE,eAFF;AAGLQ,IAAAA,IAAI,EAAEuB,SAHD;IAILf,MAAM,EAAEA,aAAM,CAACgB,KAAK,CAAChB,MAAP,EAAee,SAAS,CAACE,QAAzB,CAJT;IAKLR,cAAc,EAAET,aAAM,CAACgB,KAAK,CAACP,cAAP,EAAuBM,SAAS,CAACE,QAAjC,CAAA;GALxB,CAAA;AAOD;;;;;;;;;"}