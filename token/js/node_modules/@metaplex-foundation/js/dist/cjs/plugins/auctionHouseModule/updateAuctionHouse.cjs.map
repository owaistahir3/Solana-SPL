{"version":3,"file":"updateAuctionHouse.cjs","sources":["../../../../src/plugins/auctionHouseModule/updateAuctionHouse.ts"],"sourcesContent":["import { ConfirmOptions, PublicKey } from '@solana/web3.js';\nimport { createUpdateAuctionHouseInstruction } from '@metaplex-foundation/mpl-auction-house';\nimport isEqual from 'lodash.isequal';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, Signer, OperationHandler } from '@/types';\nimport { TransactionBuilder } from '@/utils';\nimport { NoInstructionsToSendError } from '@/errors';\nimport { findAssociatedTokenAccountPda } from '../tokenModule';\nimport { SendAndConfirmTransactionResponse } from '../rpcModule';\nimport { AuctionHouse } from './AuctionHouse';\nimport { TreasuryDestinationOwnerRequiredError } from './errors';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'UpdateAuctionHouseOperation' as const;\nexport const updateAuctionHouseOperation =\n  useOperation<UpdateAuctionHouseOperation>(Key);\nexport type UpdateAuctionHouseOperation = Operation<\n  typeof Key,\n  UpdateAuctionHouseInput,\n  UpdateAuctionHouseOutput\n>;\n\nexport type UpdateAuctionHouseInput = {\n  // Main Accounts.\n  auctionHouse: AuctionHouse;\n  authority?: Signer;\n  payer?: Signer;\n\n  // Updatable Data.\n  sellerFeeBasisPoints?: number | null;\n  requiresSignOff?: boolean | null;\n  canChangeSalePrice?: boolean | null;\n  newAuthority?: PublicKey;\n  feeWithdrawalDestination?: PublicKey;\n  treasuryWithdrawalDestinationOwner?: PublicKey;\n\n  // Options.\n  confirmOptions?: ConfirmOptions;\n};\n\nexport type UpdateAuctionHouseOutput = {\n  response: SendAndConfirmTransactionResponse;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const updateAuctionHouseOperationHandler: OperationHandler<UpdateAuctionHouseOperation> =\n  {\n    handle: async (\n      operation: UpdateAuctionHouseOperation,\n      metaplex: Metaplex\n    ) => {\n      const builder = updateAuctionHouseBuilder(metaplex, operation.input);\n\n      if (builder.isEmpty()) {\n        throw new NoInstructionsToSendError(Key);\n      }\n\n      return builder.sendAndConfirm(metaplex, operation.input.confirmOptions);\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\nexport type UpdateAuctionHouseBuilderParams = Omit<\n  UpdateAuctionHouseInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\nexport const updateAuctionHouseBuilder = (\n  metaplex: Metaplex,\n  params: UpdateAuctionHouseBuilderParams\n): TransactionBuilder => {\n  const authority = params.authority ?? metaplex.identity();\n  const payer = params.payer ?? metaplex.identity();\n  const auctionHouse = params.auctionHouse;\n\n  let treasuryWithdrawalDestinationOwner: PublicKey;\n  let treasuryWithdrawalDestination: PublicKey;\n  if (auctionHouse.isNative) {\n    treasuryWithdrawalDestinationOwner =\n      params.treasuryWithdrawalDestinationOwner ??\n      auctionHouse.treasuryWithdrawalDestinationAddress;\n    treasuryWithdrawalDestination = treasuryWithdrawalDestinationOwner;\n  } else if (params.treasuryWithdrawalDestinationOwner) {\n    treasuryWithdrawalDestinationOwner =\n      params.treasuryWithdrawalDestinationOwner;\n    treasuryWithdrawalDestination = findAssociatedTokenAccountPda(\n      auctionHouse.treasuryMint.address,\n      treasuryWithdrawalDestinationOwner\n    );\n  } else {\n    throw new TreasuryDestinationOwnerRequiredError();\n  }\n\n  const originalData = {\n    authority: auctionHouse.authorityAddress,\n    feeWithdrawalDestination: auctionHouse.feeWithdrawalDestinationAddress,\n    treasuryWithdrawalDestination:\n      auctionHouse.treasuryWithdrawalDestinationAddress,\n    sellerFeeBasisPoints: auctionHouse.sellerFeeBasisPoints,\n    requiresSignOff: auctionHouse.requiresSignOff,\n    canChangeSalePrice: auctionHouse.canChangeSalePrice,\n  };\n  const updatedData = {\n    authority: params.newAuthority ?? originalData.authority,\n    feeWithdrawalDestination:\n      params.feeWithdrawalDestination ?? originalData.feeWithdrawalDestination,\n    treasuryWithdrawalDestination,\n    sellerFeeBasisPoints:\n      params.sellerFeeBasisPoints ?? originalData.sellerFeeBasisPoints,\n    requiresSignOff: params.requiresSignOff ?? originalData.requiresSignOff,\n    canChangeSalePrice:\n      params.canChangeSalePrice ?? originalData.canChangeSalePrice,\n  };\n  const shouldSendUpdateInstruction = !isEqual(originalData, updatedData);\n\n  return TransactionBuilder.make()\n    .setFeePayer(payer)\n    .when(shouldSendUpdateInstruction, (builder) =>\n      builder.add({\n        instruction: createUpdateAuctionHouseInstruction(\n          {\n            treasuryMint: auctionHouse.treasuryMint.address,\n            payer: payer.publicKey,\n            authority: authority.publicKey,\n            newAuthority: updatedData.authority,\n            feeWithdrawalDestination: updatedData.feeWithdrawalDestination,\n            treasuryWithdrawalDestination,\n            treasuryWithdrawalDestinationOwner,\n            auctionHouse: auctionHouse.address,\n          },\n          {\n            sellerFeeBasisPoints: params.sellerFeeBasisPoints ?? null,\n            requiresSignOff: params.requiresSignOff ?? null,\n            canChangeSalePrice: params.canChangeSalePrice ?? null,\n          }\n        ),\n        signers: [payer, authority],\n        key: params.instructionKey ?? 'updateAuctionHouse',\n      })\n    );\n};\n"],"names":["Key","updateAuctionHouseOperation","useOperation","updateAuctionHouseOperationHandler","handle","operation","metaplex","builder","updateAuctionHouseBuilder","input","isEmpty","NoInstructionsToSendError","sendAndConfirm","confirmOptions","params","authority","identity","payer","auctionHouse","treasuryWithdrawalDestinationOwner","treasuryWithdrawalDestination","isNative","treasuryWithdrawalDestinationAddress","findAssociatedTokenAccountPda","treasuryMint","address","TreasuryDestinationOwnerRequiredError","originalData","authorityAddress","feeWithdrawalDestination","feeWithdrawalDestinationAddress","sellerFeeBasisPoints","requiresSignOff","canChangeSalePrice","updatedData","newAuthority","shouldSendUpdateInstruction","isEqual","TransactionBuilder","make","setFeePayer","when","add","instruction","createUpdateAuctionHouseInstruction","publicKey","signers","key","instructionKey"],"mappings":"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"}