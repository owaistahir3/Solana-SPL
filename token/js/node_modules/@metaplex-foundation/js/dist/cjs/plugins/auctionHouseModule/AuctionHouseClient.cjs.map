{"version":3,"file":"AuctionHouseClient.cjs","sources":["../../../../src/plugins/auctionHouseModule/AuctionHouseClient.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { now, Signer } from '@/types';\nimport { Task } from '@/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { AuctionHouse } from './AuctionHouse';\nimport {\n  CreateListingInput,\n  createListingOperation,\n  CreateListingOutput,\n} from './createListing';\nimport {\n  FindListingByAddressInput,\n  findListingByAddressOperation,\n} from './findListingByAddress';\nimport { LazyListing, Listing } from './Listing';\nimport { LoadListingInput, loadListingOperation } from './loadListing';\nimport {\n  CreateBidInput,\n  createBidOperation,\n  CreateBidOutput,\n} from './createBid';\nimport {\n  FindBidByAddressInput,\n  findBidByAddressOperation,\n} from './findBidByAddress';\nimport { Bid, LazyBid } from './Bid';\nimport { LoadBidInput, loadBidOperation } from './loadBid';\n\ntype WithoutAH<T> = Omit<T, 'auctionHouse' | 'auctioneerAuthority'>;\n\nexport class AuctionHouseClient {\n  constructor(\n    protected readonly metaplex: Metaplex,\n    protected readonly auctionHouse: AuctionHouse,\n    protected readonly auctioneerAuthority?: Signer\n  ) {}\n\n  list(\n    input: WithoutAH<CreateListingInput>\n  ): Task<CreateListingOutput & { listing: Listing }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createListingOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      try {\n        const listing = await this.findListingByAddress(\n          output.sellerTradeState\n        ).run(scope);\n        return { listing, ...output };\n      } catch (error) {\n        // Fallback to manually creating a listing from inputs and outputs.\n      }\n\n      scope.throwIfCanceled();\n      const lazyListing: LazyListing = {\n        model: 'listing',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.sellerTradeState,\n        bookkeeperAddress: input.printReceipt ? output.bookkeeper : null,\n        sellerAddress: output.seller,\n        metadataAddress: output.metadata,\n        receiptAddress: input.printReceipt ? output.receipt : null,\n        purchaseReceiptAddress: null,\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n        canceledAt: null,\n      };\n\n      return {\n        listing: await this.loadListing(lazyListing).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findListingByAddress(\n    address: PublicKey,\n    options: Omit<FindListingByAddressInput, 'address' | 'auctionHouse'> = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findListingByAddressOperation({\n        address,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadListing(\n    lazyListing: LazyListing,\n    options: Omit<LoadListingInput, 'lazyListing'> = {}\n  ): Task<Listing> {\n    return this.metaplex\n      .operations()\n      .getTask(loadListingOperation({ lazyListing, ...options }));\n  }\n\n  bid(input: WithoutAH<CreateBidInput>): Task<CreateBidOutput & { bid: Bid }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createBidOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      try {\n        const bid = await this.findBidByAddress(output.buyerTradeState).run(\n          scope\n        );\n        return { bid, ...output };\n      } catch (error) {\n        // Fallback to manually creating a bid from inputs and outputs.\n      }\n\n      scope.throwIfCanceled();\n      const lazyBid: LazyBid = {\n        model: 'bid',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.buyerTradeState,\n        bookkeeperAddress: input.printReceipt ? output.bookkeeper : null,\n        tokenAddress: output.tokenAccount,\n        buyerAddress: output.buyer,\n        metadataAddress: output.metadata,\n        receiptAddress: input.printReceipt ? output.receipt : null,\n        purchaseReceiptAddress: null,\n        isPublic: Boolean(output.tokenAccount),\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n        canceledAt: null,\n      };\n\n      return {\n        bid: await this.loadBid(lazyBid).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findBidByAddress(\n    address: PublicKey,\n    options: Omit<FindBidByAddressInput, 'address' | 'auctionHouse'> = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findBidByAddressOperation({\n        address,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadBid(\n    lazyBid: LazyBid,\n    options: Omit<LoadBidInput, 'lazyBid'> = {}\n  ): Task<Bid> {\n    return this.metaplex\n      .operations()\n      .getTask(loadBidOperation({ lazyBid, ...options }));\n  }\n\n  protected addAH<T>(input: WithoutAH<T>): T {\n    return {\n      auctionHouse: this.auctionHouse,\n      auctioneerAuthority: this.auctioneerAuthority,\n      ...input,\n    } as unknown as T;\n  }\n}\n"],"names":["AuctionHouseClient","constructor","metaplex","auctionHouse","auctioneerAuthority","list","input","Task","scope","output","operations","execute","createListingOperation","addAH","throwIfCanceled","listing","findListingByAddress","sellerTradeState","run","error","lazyListing","model","lazy","tradeStateAddress","bookkeeperAddress","printReceipt","bookkeeper","sellerAddress","seller","metadataAddress","metadata","receiptAddress","receipt","purchaseReceiptAddress","price","tokens","basisPoints","createdAt","now","canceledAt","loadListing","address","options","getTask","findListingByAddressOperation","loadListingOperation","bid","createBidOperation","findBidByAddress","buyerTradeState","lazyBid","tokenAddress","tokenAccount","buyerAddress","buyer","isPublic","Boolean","loadBid","findBidByAddressOperation","loadBidOperation"],"mappings":"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"}