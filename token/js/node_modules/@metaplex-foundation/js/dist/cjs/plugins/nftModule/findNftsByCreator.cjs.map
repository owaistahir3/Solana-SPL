{"version":3,"file":"findNftsByCreator.cjs","sources":["../../../../src/plugins/nftModule/findNftsByCreator.ts"],"sourcesContent":["import { Commitment, PublicKey } from '@solana/web3.js';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport { Metaplex } from '@/Metaplex';\nimport { TokenMetadataProgram } from './program';\nimport { findNftsByMintListOperation } from './findNftsByMintList';\nimport { LazyNft, Nft } from './Nft';\nimport { DisposableScope } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindNftsByCreatorOperation' as const;\nexport const findNftsByCreatorOperation =\n  useOperation<FindNftsByCreatorOperation>(Key);\nexport type FindNftsByCreatorOperation = Operation<\n  typeof Key,\n  FindNftsByCreatorInput,\n  (LazyNft | Nft)[]\n>;\n\nexport interface FindNftsByCreatorInput {\n  creator: PublicKey;\n  position?: number;\n  commitment?: Commitment;\n}\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findNftsByCreatorOperationHandler: OperationHandler<FindNftsByCreatorOperation> =\n  {\n    handle: async (\n      operation: FindNftsByCreatorOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const { creator, position = 1, commitment } = operation.input;\n\n      const mints = await TokenMetadataProgram.metadataV1Accounts(metaplex)\n        .selectMint()\n        .whereCreator(position, creator)\n        .getDataAsPublicKeys();\n      scope.throwIfCanceled();\n\n      const nfts = await metaplex\n        .operations()\n        .execute(findNftsByMintListOperation({ mints, commitment }), scope);\n\n      return nfts.filter((nft): nft is LazyNft => nft !== null);\n    },\n  };\n"],"names":["Key","findNftsByCreatorOperation","useOperation","findNftsByCreatorOperationHandler","handle","operation","metaplex","scope","creator","position","commitment","input","mints","TokenMetadataProgram","metadataV1Accounts","selectMint","whereCreator","getDataAsPublicKeys","throwIfCanceled","nfts","operations","execute","findNftsByMintListOperation","filter","nft"],"mappings":";;;;;;;;AAQA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,4BAAZ,CAAA;MACaC,0BAA0B,GACrCC,sBAAY,CAA6BF,GAA7B,EADP;AAcP;AACA;AACA;AAEO,MAAMG,iCAA+E,GAC1F;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,OAAF;AAAWC,MAAAA,QAAQ,GAAG,CAAtB;AAAyBC,MAAAA,UAAAA;KAAeL,GAAAA,SAAS,CAACM,KAAxD,CAAA;AAEA,IAAA,MAAMC,KAAK,GAAG,MAAMC,4BAAoB,CAACC,kBAArB,CAAwCR,QAAxC,CAAA,CACjBS,UADiB,EAAA,CAEjBC,YAFiB,CAEJP,QAFI,EAEMD,OAFN,CAAA,CAGjBS,mBAHiB,EAApB,CAAA;AAIAV,IAAAA,KAAK,CAACW,eAAN,EAAA,CAAA;IAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CACxBc,UADgB,EAEhBC,CAAAA,OAFgB,CAERC,8CAA2B,CAAC;MAAEV,KAAF;AAASF,MAAAA,UAAAA;KAAV,CAFnB,EAE4CH,KAF5C,CAAnB,CAAA;IAIA,OAAOY,IAAI,CAACI,MAAL,CAAaC,GAAD,IAAyBA,GAAG,KAAK,IAA7C,CAAP,CAAA;AACD,GAAA;AAnBH;;;;;"}