{"version":3,"file":"createAuctionHouse.cjs","sources":["../../../../src/plugins/auctionHouseModule/createAuctionHouse.ts"],"sourcesContent":["import { ConfirmOptions, PublicKey } from '@solana/web3.js';\nimport { createCreateAuctionHouseInstruction } from '@metaplex-foundation/mpl-auction-house';\nimport type { Metaplex } from '@/Metaplex';\nimport {\n  useOperation,\n  Operation,\n  Signer,\n  OperationHandler,\n  Pda,\n} from '@/types';\nimport { TransactionBuilder } from '@/utils';\nimport { findAssociatedTokenAccountPda } from '../tokenModule';\nimport {\n  findAuctionHouseFeePda,\n  findAuctionHousePda,\n  findAuctionHouseTreasuryPda,\n} from './pdas';\nimport { SendAndConfirmTransactionResponse } from '../rpcModule';\nimport { WRAPPED_SOL_MINT } from '../tokenModule';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'CreateAuctionHouseOperation' as const;\nexport const createAuctionHouseOperation =\n  useOperation<CreateAuctionHouseOperation>(Key);\nexport type CreateAuctionHouseOperation = Operation<\n  typeof Key,\n  CreateAuctionHouseInput,\n  CreateAuctionHouseOutput\n>;\n\nexport type CreateAuctionHouseInput = {\n  // Data.\n  sellerFeeBasisPoints: number;\n  requiresSignOff?: boolean;\n  canChangeSalePrice?: boolean;\n\n  // Accounts.\n  treasuryMint?: PublicKey;\n  payer?: Signer;\n  authority?: PublicKey;\n  feeWithdrawalDestination?: PublicKey;\n  treasuryWithdrawalDestinationOwner?: PublicKey;\n\n  // Options.\n  confirmOptions?: ConfirmOptions;\n};\n\nexport type CreateAuctionHouseOutput = {\n  response: SendAndConfirmTransactionResponse;\n  auctionHouseAddress: Pda;\n  auctionHouseFeeAccountAddress: Pda;\n  auctionHouseTreasuryAddress: Pda;\n  treasuryWithdrawalDestinationAddress: PublicKey;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const createAuctionHouseOperationHandler: OperationHandler<CreateAuctionHouseOperation> =\n  {\n    handle: async (\n      operation: CreateAuctionHouseOperation,\n      metaplex: Metaplex\n    ) => {\n      return createAuctionHouseBuilder(\n        metaplex,\n        operation.input\n      ).sendAndConfirm(metaplex, operation.input.confirmOptions);\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\nexport type CreateAuctionHouseBuilderParams = Omit<\n  CreateAuctionHouseInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\nexport type CreateAuctionHouseBuilderContext = Omit<\n  CreateAuctionHouseOutput,\n  'response'\n>;\n\nexport const createAuctionHouseBuilder = (\n  metaplex: Metaplex,\n  params: CreateAuctionHouseBuilderParams\n): TransactionBuilder<CreateAuctionHouseBuilderContext> => {\n  // Data.\n  const canChangeSalePrice = params.canChangeSalePrice ?? false;\n  const requiresSignOff = params.requiresSignOff ?? canChangeSalePrice;\n\n  // Accounts.\n  const authority = params.authority ?? metaplex.identity().publicKey;\n  const payer = params.payer ?? metaplex.identity();\n  const treasuryMint = params.treasuryMint ?? WRAPPED_SOL_MINT;\n  const treasuryWithdrawalDestinationOwner =\n    params.treasuryWithdrawalDestinationOwner ?? metaplex.identity().publicKey;\n  const feeWithdrawalDestination =\n    params.feeWithdrawalDestination ?? metaplex.identity().publicKey;\n\n  // PDAs.\n  const auctionHouse = findAuctionHousePda(authority, treasuryMint);\n  const auctionHouseFeeAccount = findAuctionHouseFeePda(auctionHouse);\n  const auctionHouseTreasury = findAuctionHouseTreasuryPda(auctionHouse);\n  const treasuryWithdrawalDestination = treasuryMint.equals(WRAPPED_SOL_MINT)\n    ? treasuryWithdrawalDestinationOwner\n    : findAssociatedTokenAccountPda(\n        treasuryMint,\n        treasuryWithdrawalDestinationOwner\n      );\n\n  return TransactionBuilder.make<CreateAuctionHouseBuilderContext>()\n    .setFeePayer(payer)\n    .setContext({\n      auctionHouseAddress: auctionHouse,\n      auctionHouseFeeAccountAddress: auctionHouseFeeAccount,\n      auctionHouseTreasuryAddress: auctionHouseTreasury,\n      treasuryWithdrawalDestinationAddress: treasuryWithdrawalDestination,\n    })\n    .add({\n      instruction: createCreateAuctionHouseInstruction(\n        {\n          treasuryMint,\n          payer: payer.publicKey,\n          authority,\n          feeWithdrawalDestination,\n          treasuryWithdrawalDestination,\n          treasuryWithdrawalDestinationOwner,\n          auctionHouse,\n          auctionHouseFeeAccount,\n          auctionHouseTreasury,\n        },\n        {\n          bump: auctionHouse.bump,\n          feePayerBump: auctionHouseFeeAccount.bump,\n          treasuryBump: auctionHouseTreasury.bump,\n          sellerFeeBasisPoints: params.sellerFeeBasisPoints,\n          requiresSignOff,\n          canChangeSalePrice,\n        }\n      ),\n      signers: [payer],\n      key: params.instructionKey ?? 'createAuctionHouse',\n    });\n};\n"],"names":["Key","createAuctionHouseOperation","useOperation","createAuctionHouseOperationHandler","handle","operation","metaplex","createAuctionHouseBuilder","input","sendAndConfirm","confirmOptions","params","canChangeSalePrice","requiresSignOff","authority","identity","publicKey","payer","treasuryMint","WRAPPED_SOL_MINT","treasuryWithdrawalDestinationOwner","feeWithdrawalDestination","auctionHouse","findAuctionHousePda","auctionHouseFeeAccount","findAuctionHouseFeePda","auctionHouseTreasury","findAuctionHouseTreasuryPda","treasuryWithdrawalDestination","equals","findAssociatedTokenAccountPda","TransactionBuilder","make","setFeePayer","setContext","auctionHouseAddress","auctionHouseFeeAccountAddress","auctionHouseTreasuryAddress","treasuryWithdrawalDestinationAddress","add","instruction","createCreateAuctionHouseInstruction","bump","feePayerBump","treasuryBump","sellerFeeBasisPoints","signers","key","instructionKey"],"mappings":"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"}