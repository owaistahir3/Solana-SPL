import { PublicKey } from '@solana/web3.js';
import { Option } from '../../utils';
import { OriginalEditionAccount, OriginalOrPrintEditionAccount, PrintEditionAccount } from './accounts';
import { BigNumber } from '../../types';
export declare type NftEdition = NftOriginalEdition | NftPrintEdition;
export declare const isNftEdition: (value: any) => value is NftEdition;
export declare function assertNftEdition(value: any): asserts value is NftEdition;
export declare const toNftEdition: (account: OriginalOrPrintEditionAccount) => NftEdition;
export declare type NftOriginalEdition = Readonly<{
    model: 'nftEdition';
    isOriginal: true;
    address: PublicKey;
    supply: BigNumber;
    maxSupply: Option<BigNumber>;
}>;
export declare const isNftOriginalEdition: (value: any) => value is Readonly<{
    model: 'nftEdition';
    isOriginal: true;
    address: PublicKey;
    supply: BigNumber;
    maxSupply: Option<BigNumber>;
}>;
export declare function assertNftOriginalEdition(value: any): asserts value is NftOriginalEdition;
export declare const toNftOriginalEdition: (account: OriginalEditionAccount) => NftOriginalEdition;
export declare type NftPrintEdition = Readonly<{
    model: 'nftEdition';
    isOriginal: false;
    address: PublicKey;
    parent: PublicKey;
    number: BigNumber;
}>;
export declare const isNftPrintEdition: (value: any) => value is Readonly<{
    model: 'nftEdition';
    isOriginal: false;
    address: PublicKey;
    parent: PublicKey;
    number: BigNumber;
}>;
export declare function assertNftPrintEdition(value: any): asserts value is NftPrintEdition;
export declare const toNftPrintEdition: (account: PrintEditionAccount) => NftPrintEdition;
