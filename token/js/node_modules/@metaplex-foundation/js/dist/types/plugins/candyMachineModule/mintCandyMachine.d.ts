import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { Operation, OperationHandler, Signer } from '../../types';
import { Metaplex } from '../../Metaplex';
import { TransactionBuilder } from '../../utils';
import { CandyMachine } from './CandyMachine';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "MintCandyMachineOperation";
export declare const mintCandyMachineOperation: import("../../types").OperationConstructor<MintCandyMachineOperation, "MintCandyMachineOperation", MintCandyMachineInput, MintCandyMachineOutput>;
export declare type MintCandyMachineOperation = Operation<typeof Key, MintCandyMachineInput, MintCandyMachineOutput>;
export declare type MintCandyMachineInput = {
    candyMachine: CandyMachine;
    payer?: Signer;
    newMint?: Signer;
    newOwner?: PublicKey;
    newToken?: Signer;
    payerToken?: PublicKey;
    whitelistToken?: PublicKey;
    tokenProgram?: PublicKey;
    associatedTokenProgram?: PublicKey;
    tokenMetadataProgram?: PublicKey;
    candyMachineProgram?: PublicKey;
    confirmOptions?: ConfirmOptions;
};
export declare type MintCandyMachineOutput = {
    response: SendAndConfirmTransactionResponse;
    mintSigner: Signer;
    tokenAddress: PublicKey;
};
export declare const mintCandyMachineOperationHandler: OperationHandler<MintCandyMachineOperation>;
export declare type MintCandyMachineBuilderParams = Omit<MintCandyMachineInput, 'confirmOptions'> & {
    createMintAccountInstructionKey?: string;
    initializeMintInstructionKey?: string;
    createAssociatedTokenAccountInstructionKey?: string;
    createTokenAccountInstructionKey?: string;
    initializeTokenInstructionKey?: string;
    mintTokensInstructionKey?: string;
    mintNftInstructionKey?: string;
    setCollectionInstructionKey?: string;
};
export declare type MintCandyMachineBuilderContext = Omit<MintCandyMachineOutput, 'response'>;
export declare const mintCandyMachineBuilder: (metaplex: Metaplex, params: MintCandyMachineBuilderParams) => Promise<TransactionBuilder<MintCandyMachineBuilderContext>>;
export {};
